@model EstimateVM;
<!-- Hero Image Starts here -->
<div class="hero-image-small hero-small-car">
    <div class="container">
        <div class="hero-text-inner">
            <div class="row">
                <div class="col-lg-6 col-md-6 col-sm-12 m-auto text-center">
                    <h3><span class="sub-heading-1"></span>Estimate Your Cost</h3>
                </div>
            </div>
        </div>
    </div>
</div>
<hr/>
<!-- Hero Image Ends here -->
<form method="post">
    <div class="border p-3 mt-4">
        <div class="mb-3 row pd-1">
            <label asp-for="Estimate.CustomerName" class="p-0"></label>
            <input asp-for="Estimate.CustomerName" class="form-control" />
            <span asp-validation-for="Estimate.CustomerName" class="text-danger"></span>
        </div>
        <div class="mb-3 row pd-1">
            <label asp-for="Estimate.CustomerPhoneNumber" class="p-0"></label>
            <input asp-for="Estimate.CustomerPhoneNumber" class="form-control" />
            <span asp-validation-for="Estimate.CustomerPhoneNumber" class="text-danger"></span>
        </div>
        <div class="mb-3 row pd-1">
            <label asp-for="Estimate.VehicleNumber" class="p-0"></label>
            <select asp-for="@Model.Estimate.VehicleNumber" asp-items="@Model.VehicleList" id="vehicleDropDown" class="form-select">
                <option value="" disabled selected>-- Select Vehicle --</option>
            </select>
            <span asp-validation-for="Estimate.VehicleNumber" class="text-danger"></span>
        </div>
        <input asp-for="Estimate.VehicleId" hidden />
        <div class="mb-3 row pd-1">
            <label asp-for="Estimate.VehicleName" class="p-0"></label>
            <input asp-for="Estimate.VehicleName" class="form-control" disabled />
            <span asp-validation-for="Estimate.VehicleName" class="text-danger"></span>
        </div>
        <div class="mb-3 row pd-1">
            <label asp-for="Estimate.VehicleModel" class="p-0"></label>
            <input asp-for="Estimate.VehicleModel" class="form-control" disabled/>
            <span asp-validation-for="Estimate.VehicleModel" class="text-danger"></span>
        </div>
        <div class="mb-3 row pd-1">
            <label asp-for="Estimate.VehicleVersion" class="p-0"></label>
            <input asp-for="Estimate.VehicleVersion" class="form-control" disabled />
            <span asp-validation-for="Estimate.VehicleVersion" class="text-danger"></span>
        </div>
        <div class="mb-3 row pd-1">
            <label asp-for="Estimate.VehicleValue" class="p-0"></label>
            <input asp-for="Estimate.VehicleValue" class="form-control" disabled />
            <span asp-validation-for="Estimate.VehicleValue" class="text-danger"></span>
        </div>
        <div class="mb-3 row pd-1">
            <label asp-for="Estimate.VehicleRate" class="p-0"></label>
            <input asp-for="Estimate.VehicleRate" class="form-control" disabled />
            <span asp-validation-for="Estimate.VehicleRate" class="text-danger"></span>
        </div>
        <div class="mb-3 row pd-1">
            <label asp-for="Estimate.VehiclePolicyType" class="p-0"></label>
            <select asp-for="@Model.Estimate.VehiclePolicyType" asp-items="@Model.PolicyList" id="policyDropDown" class="form-select">
                <option disabled selected>--Select Policy--</option>
            </select>
            <span asp-validation-for="Estimate.VehiclePolicyType" class="text-danger"></span>
        </div>

        <div class="mb-3 row pd-1">
            <label asp-for="Estimate.VehicleWarranty" class="p-0"></label>
            <textarea asp-for="Estimate.VehicleWarranty" class="form-control" disabled></textarea>
            <span asp-validation-for="Estimate.VehicleWarranty" class="text-danger"></span>
        </div>
        <input asp-for="Estimate.PolicyId" hidden />
       
     
        <div class="mb-3 row pd-1">
            <label asp-for="Estimate.PolicyBaseCost" class="p-0"></label>
            <input asp-for="Estimate.PolicyBaseCost" class="form-control" disabled />
            <span asp-validation-for="Estimate.PolicyBaseCost" class="text-danger"></span>
        </div>
       
        <div class="mb-3 row pd-1">
            <label asp-for="Estimate.PolicyAnnualCost" class="p-0"></label>
            <input asp-for="Estimate.PolicyAnnualCost" class="form-control" disabled />
            <span asp-validation-for="Estimate.PolicyAnnualCost" class="text-danger"></span>
        </div>
        <div class="mb-3 row pd-1">
            <label asp-for="Estimate.EstimateCost" class="p-0"></label>
            <input asp-for="Estimate.EstimateCost" class="form-control" disabled id="estimateCost" />
            <span asp-validation-for="Estimate.EstimateCost" class="text-danger"></span>
        </div>
       
    </div>
</form>
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script>
    $(document).ready(function () {
        // When the vehicle dropdown selection changes
        $("#vehicleDropDown").change(function () {
            // Get the selected vehicle number
            var vehicleId = $(this).val();

            // Send an AJAX request to fetch the corresponding VehicleName
            $.ajax({
                url: "/Customer/Estimate/GetVehicle",
                method: "POST",
                data: { vehicleId: vehicleId },
                success: function (data) {
         
                    // Update the VehicleName input field with the received data
                    $("input[name='Estimate.VehicleName']").val(data["name"]);
                    $("input[name='Estimate.VehicleId']").val(data["id"]);
                    $("input[name='Estimate.VehicleModel']").val(data["model"]);
                    $("input[name='Estimate.VehicleVersion']").val(data["version"]);
                    $("input[name='Estimate.VehicleValue']").val(data["vehicleValue"]);
                    $("input[name='Estimate.VehicleRate']").val(data["rate"]);
                },
                error: function (xhr, status, error) {
                    // Handle error if any
                    console.log(error);
                }
            });
        });
        // When the vehicle dropdown selection changes
        $("#policyDropDown").change(function () {
            // Get the selected vehicle number
            var policyId = $(this).val();

            // Send an AJAX request to fetch the corresponding VehicleName
            $.ajax({
                url: "/Customer/Estimate/GetPolicy",
                method: "POST",
                data: { policyId: policyId },
                success: function (data) {

                    // Update the VehicleName input field with the received data
                    $("textarea[name='Estimate.VehicleWarranty']").val(data["warranty"]);
                    $("input[name='Estimate.PolicyId']").val(data["id"]);
                    $("input[name='Estimate.PolicyBaseCost']").val(data["baseCost"]);
                    $("input[name='Estimate.PolicyAnnualCost']").val(data["annualCost"]);
                },
                error: function (xhr, status, error) {
                    // Handle error if any
                    console.log(error);
                }
            });
        });
        $("#vehicleDropDown, #policyDropDown").change(async function () {
            var vehicleId = $("#vehicleDropDown").val();
            var policyId = $("#policyDropDown").val();

            try {
                // Fetch data from both endpoints concurrently
                const [vehicleResponse, policyResponse] = await Promise.all([
                    fetch("/Customer/Estimate/GetVehicle", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({ vehicleId: vehicleId })
                    }),
                    fetch("/Customer/Estimate/GetPolicy", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({ policyId: policyId })
                    })
                ]);

                if (!vehicleResponse.ok || !policyResponse.ok) {
                    throw new Error('One or more network responses were not ok');
                }

                // Extract JSON data from both responses
                const [vehicleData, policyData] = await Promise.all([
                    vehicleResponse.json(),
                    policyResponse.json()
                ]);

                // Update the input fields with the retrieved data
                $("input[name='Estimate.VehicleName']").val(vehicleData.name);
                $("input[name='Estimate.VehicleId']").val(vehicleData.id);
                $("input[name='Estimate.VehicleModel']").val(vehicleData.model);
                $("input[name='Estimate.VehicleVersion']").val(vehicleData.version);
                $("input[name='Estimate.VehicleValue']").val(vehicleData.vehicleValue);
                $("input[name='Estimate.VehicleRate']").val(vehicleData.rate);

                $("textarea[name='Estimate.VehicleWarranty']").val(policyData.warranty);
                $("input[name='Estimate.PolicyId']").val(policyData.id);
                $("input[name='Estimate.PolicyBaseCost']").val(policyData.baseCost);
                $("input[name='Estimate.PolicyAnnualCost']").val(policyData.annualCost);

                // Check if baseCost or annualCost is NaN
                var baseCost = parseFloat(policyData.baseCost);
                var annualCost = parseFloat(policyData.annualCost);
                if (isNaN(baseCost) || isNaN(annualCost)) {
                    // If either is NaN, wait for 2 seconds before executing the calculate function
                    setTimeout(calculateEstimateCost, 2000);
                } else {
                    // Otherwise, execute the calculate function immediately
                    calculateEstimateCost();
                }
            } catch (error) {
                console.error('There was a problem with the fetch operation:', error);
            }
        });

        function calculateEstimateCost() {
            // Get selected vehicle and policy details
            var vehicleValue = parseFloat($("input[name='Estimate.VehicleValue']").val());
            var rate = parseFloat($("input[name='Estimate.VehicleRate']").val());
            var version = parseFloat($("input[name='Estimate.VehicleVersion']").val());
            var baseCost = parseFloat($("input[name='Estimate.PolicyBaseCost']").val());
            var annualCost = parseFloat($("input[name='Estimate.PolicyAnnualCost']").val());
            var currentYear = new Date().getFullYear();

            // Perform calculation
            var estimateCost = baseCost + ((vehicleValue * rate) * (currentYear - version) * annualCost);

            // Insert the estimateCost value into #estimateCost
            $("#estimateCost").val(estimateCost.toFixed(2));
        }

       

        
    });
</script>








